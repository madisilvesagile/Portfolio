{"version":3,"sources":["webpack:///./src/views/Contact.vue?0a5b","webpack:///./src/views/Contact.vue","webpack:///./node_modules/@emailjs/browser/es/store/store.js","webpack:///./node_modules/@emailjs/browser/es/methods/init/init.js","webpack:///./node_modules/@emailjs/browser/es/utils/validateParams.js","webpack:///./node_modules/@emailjs/browser/es/models/EmailJSResponseStatus.js","webpack:///./node_modules/@emailjs/browser/es/api/sendPost.js","webpack:///./node_modules/@emailjs/browser/es/methods/send/send.js","webpack:///./node_modules/@emailjs/browser/es/methods/sendForm/sendForm.js","webpack:///./node_modules/@emailjs/browser/es/index.js","webpack:///./src/views/Contact.vue?ea20"],"names":["ref","sendEmail","submitForm","autocomplete","store","_origin","init","publicKey","origin","_userID","validateParams","serviceID","templateID","EmailJSResponseStatus","httpResponse","this","status","text","responseText","sendPost","url","data","headers","Promise","resolve","reject","xhr","XMLHttpRequest","addEventListener","target","responseStatus","open","Object","keys","forEach","key","setRequestHeader","send","templatePrams","uID","params","lib_version","user_id","service_id","template_id","template_params","JSON","stringify","findHTMLForm","form","currentForm","document","querySelector","nodeName","sendForm","formData","FormData","append","name","methods","$refs","then","result","console","log","error","reset","__exports__","render"],"mappings":"kIAAA,W,yJCEM,yBAAgB,UAAZ,WAAO,G,8oBADb,yBAmBU,gBAlBR,EACA,yBAgBO,QAhBDA,IAAI,OAAQ,SAAM,C,0DAAU,EAAAC,WAAA,EAAAA,UAAA,qBAAS,c,8BAAW,EAAAC,YAAA,EAAAA,WAAA,sBAAYC,aAAa,O,CAC7E,G,UCJD,MAAMC,EAAQ,CACjBC,QAAS,2BCKAC,EAAO,CAACC,EAAWC,EAAS,6BACrCJ,EAAMK,QAAUF,EAChBH,EAAMC,QAAUG,GCRPE,EAAiB,CAACH,EAAWI,EAAWC,KACjD,IAAKL,EACD,KAAM,gFAEV,IAAKI,EACD,KAAM,wEAEV,IAAKC,EACD,KAAM,mFAEV,OAAO,GCVJ,MAAMC,EACT,YAAYC,GACRC,KAAKC,OAASF,EAAaE,OAC3BD,KAAKE,KAAOH,EAAaI,cCD1B,MAAMC,EAAW,CAACC,EAAKC,EAAMC,EAAU,KACnC,IAAIC,QAAQ,CAACC,EAASC,KACzB,MAAMC,EAAM,IAAIC,eAChBD,EAAIE,iBAAiB,OAAQ,EAAGC,aAC5B,MAAMC,EAAiB,IAAIjB,EAAsBgB,GACnB,MAA1BC,EAAed,QAA0C,OAAxBc,EAAeb,KAChDO,EAAQM,GAGRL,EAAOK,KAGfJ,EAAIE,iBAAiB,QAAS,EAAGC,aAC7BJ,EAAO,IAAIZ,EAAsBgB,MAErCH,EAAIK,KAAK,OAAQ3B,EAAMC,QAAUe,GAAK,GACtCY,OAAOC,KAAKX,GAASY,QAASC,IAC1BT,EAAIU,iBAAiBD,EAAKb,EAAQa,MAEtCT,EAAIW,KAAKhB,KCVJgB,EAAO,CAAC1B,EAAWC,EAAY0B,EAAe/B,KACvD,MAAMgC,EAAMhC,GAAaH,EAAMK,QAC/BC,EAAe6B,EAAK5B,EAAWC,GAC/B,MAAM4B,EAAS,CACXC,YAAa,QACbC,QAASH,EACTI,WAAYhC,EACZiC,YAAahC,EACbiC,gBAAiBP,GAErB,OAAOnB,EAAS,uBAAwB2B,KAAKC,UAAUP,GAAS,CAC5D,eAAgB,sBCnBlBQ,EAAgBC,IAClB,IAAIC,EAOJ,GALIA,EADgB,kBAATD,EACOE,SAASC,cAAcH,GAGvBA,GAEbC,GAAwC,SAAzBA,EAAYG,SAC5B,KAAM,0FAEV,OAAOH,GAUEI,EAAW,CAAC3C,EAAWC,EAAYqC,EAAM1C,KAClD,MAAMgC,EAAMhC,GAAaH,EAAMK,QACzByC,EAAcF,EAAaC,GACjCvC,EAAe6B,EAAK5B,EAAWC,GAC/B,MAAM2C,EAAW,IAAIC,SAASN,GAK9B,OAJAK,EAASE,OAAO,cAAe,SAC/BF,EAASE,OAAO,aAAc9C,GAC9B4C,EAASE,OAAO,cAAe7C,GAC/B2C,EAASE,OAAO,UAAWlB,GACpBpB,EAAS,4BAA6BoC,IC7BlC,OACXjD,OACA+B,OACAiB,YRmBW,GACbI,KAAM,cACNC,QAAS,CACP1D,UADO,WAEL,EAAQqD,SAAS,kBAAmB,mBAAoBvC,KAAK6C,MAAMX,KAAM,qBACtEY,MAAK,SAACC,GACHC,QAAQC,IAAI,WAAYF,EAAO7C,SAChC,SAACgD,GACAF,QAAQC,IAAI,YAAaC,EAAMhD,UAGvCf,WATO,WAUHa,KAAK6C,MAAMX,KAAKiB,W,iCS/BxB,MAAMC,EAA2B,IAAgB,EAAQ,CAAC,CAAC,SAASC,GAAQ,CAAC,YAAY,qBAE1E","file":"js/contact.093d13c5.js","sourcesContent":["export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Contact.vue?vue&type=style&index=0&id=07ef6a4c&scoped=true&lang=css\"","<template>\r\n    <section>\r\n      <h2>Contact</h2>\r\n      <form ref=\"form\" @submit.prevent=\"sendEmail\" @submit=\"submitForm\" autocomplete=\"off\">\r\n        <div class=\"row\">\r\n          <div class=\"form-group\">\r\n            <label>Name</label>\r\n            <input type=\"text\" name=\"user_name\" required>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label>Email</label>\r\n            <input type=\"email\" name=\"user_email\" required>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label>Message</label>\r\n          <textarea name=\"message\"></textarea>\r\n        </div>\r\n        <button type=\"submit\" value=\"Send\">Send</button>\r\n      </form>\r\n    </section>\r\n</template>\r\n\r\n<script>\r\nimport emailjs from '@emailjs/browser';\r\n\r\nexport default {\r\n  name: 'MyComponent',\r\n  methods: {\r\n    sendEmail() {\r\n      emailjs.sendForm('service_ufi3pfr', 'template_hpxetew', this.$refs.form, 'mAxs_kQQdKFT2LoFN')\r\n        .then((result) => {\r\n            console.log('SUCCESS!', result.text);\r\n        }, (error) => {\r\n            console.log('FAILED...', error.text);\r\n        });\r\n    },\r\n    submitForm(){\r\n        this.$refs.form.reset();\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\nform {\r\n  max-width: 40rem;\r\n  margin: 0 auto;\r\n}\r\n.row {\r\n  display: flex;\r\n  flex-direction: row;\r\n  gap: 1rem;\r\n}\r\n.form-group {\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-grow: 1;\r\n}\r\n\r\ninput, textarea {\r\n  padding: 1rem;\r\n  margin-top: 0.25rem;\r\n  margin-bottom: 1rem;\r\n  font-size: 1rem;\r\n}\r\n\r\ntextarea {\r\n  height: 10rem;\r\n}\r\n\r\nbutton {\r\n  width: 10rem;\r\n  padding: 0.75rem;\r\n  font-size: 1rem;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  form {\r\n    width: 100%;\r\n  }\r\n  .row {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 0;\r\n  }\r\n}\r\n</style>\r\n\r\n","export const store = {\n    _origin: 'https://api.emailjs.com',\n};\n","import { store } from '../../store/store';\n/**\n * Initiation\n * @param {string} publicKey - set the EmailJS public key\n * @param {string} origin - set the EmailJS origin\n */\nexport const init = (publicKey, origin = 'https://api.emailjs.com') => {\n    store._userID = publicKey;\n    store._origin = origin;\n};\n","export const validateParams = (publicKey, serviceID, templateID) => {\n    if (!publicKey) {\n        throw 'The public key is required. Visit https://dashboard.emailjs.com/admin/account';\n    }\n    if (!serviceID) {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID) {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n    return true;\n};\n","export class EmailJSResponseStatus {\n    constructor(httpResponse) {\n        this.status = httpResponse.status;\n        this.text = httpResponse.responseText;\n    }\n}\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = (url, data, headers = {}) => {\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', ({ target }) => {\n            const responseStatus = new EmailJSResponseStatus(target);\n            if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n                resolve(responseStatus);\n            }\n            else {\n                reject(responseStatus);\n            }\n        });\n        xhr.addEventListener('error', ({ target }) => {\n            reject(new EmailJSResponseStatus(target));\n        });\n        xhr.open('POST', store._origin + url, true);\n        Object.keys(headers).forEach((key) => {\n            xhr.setRequestHeader(key, headers[key]);\n        });\n        xhr.send(data);\n    });\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\n/**\n * Send a template to the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {object} templatePrams - the template params, what will be set to the EmailJS template\n * @param {string} publicKey - the EmailJS public key\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const send = (serviceID, templateID, templatePrams, publicKey) => {\n    const uID = publicKey || store._userID;\n    validateParams(uID, serviceID, templateID);\n    const params = {\n        lib_version: '3.6.2',\n        user_id: uID,\n        service_id: serviceID,\n        template_id: templateID,\n        template_params: templatePrams,\n    };\n    return sendPost('/api/v1.0/email/send', JSON.stringify(params), {\n        'Content-type': 'application/json',\n    });\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\nconst findHTMLForm = (form) => {\n    let currentForm;\n    if (typeof form === 'string') {\n        currentForm = document.querySelector(form);\n    }\n    else {\n        currentForm = form;\n    }\n    if (!currentForm || currentForm.nodeName !== 'FORM') {\n        throw 'The 3rd parameter is expected to be the HTML form element or the style selector of form';\n    }\n    return currentForm;\n};\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {string} publicKey - the EmailJS public key\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const sendForm = (serviceID, templateID, form, publicKey) => {\n    const uID = publicKey || store._userID;\n    const currentForm = findHTMLForm(form);\n    validateParams(uID, serviceID, templateID);\n    const formData = new FormData(currentForm);\n    formData.append('lib_version', '3.6.2');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', uID);\n    return sendPost('/api/v1.0/email/send-form', formData);\n};\n","import { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm };\nexport default {\n    init,\n    send,\n    sendForm,\n};\n","import { render } from \"./Contact.vue?vue&type=template&id=07ef6a4c&scoped=true\"\nimport script from \"./Contact.vue?vue&type=script&lang=js\"\nexport * from \"./Contact.vue?vue&type=script&lang=js\"\n\nimport \"./Contact.vue?vue&type=style&index=0&id=07ef6a4c&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\MadisIlves\\\\Desktop\\\\kool\\\\Eksam\\\\Eksam\\\\node_modules\\\\@vue\\\\cli-service\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-07ef6a4c\"]])\n\nexport default __exports__"],"sourceRoot":""}